name: github-actions
on: [push, pull_request]
env:
  BUILD_IMAGE: bedasoftware/fhirpath-extract:main
jobs:
  build-and-test-fpml-server-ts:
    runs-on: ubuntu-latest
    steps:
      - name: Copy repository
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install
        working-directory: ts/server

      - name: Run tests
        run: yarn test
        working-directory: ts/server

      - name: Run tests
        run: yarn test:e2e
        working-directory: ts/server

  publish-fpml-server-ts-to-dockerhub:
    needs: build-and-test-fpml-server-ts
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - run: docker run --rm --privileged tonistiigi/binfmt --install all
      - run: >-
          docker buildx build --platform linux/arm64,linux/amd64
          --push --tag ${{ env.BUILD_IMAGE }} .
        working-directory: ts/server

  build-and-test-fpml-py:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: 3.9
          - python-version: "3.10"
          - python-version: "3.11"
          - python-version: "3.12"
          - python-version: "3.13"
    env:
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Python ${{ matrix.python-version }} sample
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry --project=./python install
      - name: Run lint
        run: poetry --project=./python run ruff check ./python
      - name: Run typecheck
        run: poetry --project=./python run mypy ./python
      - name: Run tests
        run: poetry --project=./python run pytest --coverage

  publish-fpml-py-to-pypi:
    needs: build-and-test-fpml-py
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install wheel and build
        run: pip install wheel build
      - name: Build a binary wheel and a source tarball
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
